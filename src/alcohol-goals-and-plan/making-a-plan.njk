{% extends "template.njk" %}

{% import "_pattern_macros/navigation_card.njk" as navcard %}
{% import "_pattern_macros/general_card.njk" as generalcard %}

{% set title = "Making a plan" %}

{% block main %}

  <section class="breadcrumbs">
    <div class="container">
      <nav aria-label="breadcrumb">
        <ol class="breadcrumb my-2">
          <li class="breadcrumb-item"><a href="{{ '/' | url }}">Home</a></li>
          <li class="breadcrumb-item"><a href="{{ '/' | url }}">Care, support and health</a></li>
          <li class="breadcrumb-item"><a href="{{ '/' | url }}">Health and wellbeing</a></li>
          <li class="breadcrumb-item"><a href="{{ '/' | url }}">Healthy lifestyles</a></li>
          <li class="breadcrumb-item"><a href="{{ '/help-to-cut-back-on-your-drinking/' | url }}">Help to cut back on your drinking</a></li>
          <li class="breadcrumb-item active">Alcohol goals and plan</li>
        </ol>
      </nav>
    </div>
  </section>

  <section class="section_stage_theme">
    <div class="container">
      <h1 class="h2">Alcohol goals and plan</h1>
    </div>
  </section>

  <section>
    <div class="container">
      <div class="col-12 col-md-9">
        <h2 class="h3 mb-2">Making a plan</h2>
        <p>If you make a plan this will make reaching your goal much easier.</p>
        <p>You can set out what you're going to do to achieve your goal. Most action plans set out the details under three headings: 'what', 'where' and 'when'.</p>
        
        <h3 class="h4 mb-2 mt-5" style="font-weight: 700">We've provided some examples to show you</h3>
        <ul>
          <li>Goal - "Try out a low alcohol alternative to your usual drink"</li>
          <li>Action plan - "When I go shopping at the supermarket on Wednesday evening I will buy some lower alcoholic drinks to have at home instead of my usual brand.</li>
          <li>Goal - "Replace alternate alcoholic drinks with a soft drink"</li>
          <li>Action plan - "When I meet Alice and Bob in the pub garden on a Monday after work I will follow my first alcoholic drink with a glass of lemonade (and say I am thirsty)."</li>
        </ul>

        <div class="accordion" id="accordionReasons">
          <div class="accordion-item">
            <h2 class="accordion-header" id="headingSelectedReasons">
              <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                My reasons
              </button>
            </h2>
            <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingSelectedReasons" data-bs-parent="#accordionReasons">
              <div class="accordion-body">
                <ul id="selectedReasonsList">
                </ul>
              </div>
            </div>
          </div>
        </div>

        <div class="row py-4" id="goals-area-row">
        </div>

        <p>
          Your reasons for change and goals are ready, finally add action plans to your goals to help you achieve them.
        </p>

        <div class="double-btn-group">
          <input type="button" class="btn btn-lg form-btn form-btn-muted my-3 mx-2" value="Previous" id="submit" onclick="submitFormBack();"></input>
          <input type="button" class="btn btn-lg form-btn my-3 mx-2" value="Continue" id="submit" onclick="submitFormContinue();"></input>
        </div>
      </div>
    </div>

    <script>
      
      window.onload = function() {
        let parentElement = document.getElementById("selectedReasonsList");
        let parentElement2 = document.getElementById("selectedGoalsList");

        let reasons = getCookie('reasonsList');
        let goals = getCookie('goalsList');
        let reasonsArray = reasons.split(",");
        let goalsArray = goals.split(",");

        if (reasons === '' && goals === '') {
          console.log(`cookies empty, returning`);
          alert(`You have not added any goals. Please go back to the previous page before continuing.`)
          return;
        }

        console.log(`cookie contents(reasons)= ${reasons}`);
        console.log(`cookie contents(goals)= ${goals}`);

        for (i = 0; i < reasonsArray.length; i++) {
          console.log(`reason ${i}= ${reasonsArray[i]}`)
          let item = document.createElement('li');
          item.innerHTML = reasonsArray[i];
          parentElement.appendChild(item);
        }

        for (i = 0; i < goalsArray.length; i++) {
          console.log(`goal ${i}= ${goalsArray[i]}`)
          addGoalDivWithPlan(goalsArray[i]);
        }
      }

      function getCookie(cname) {
        let name = cname + "=";
        let decodedCookie = decodeURIComponent(document.cookie);
        let ca = decodedCookie.split(';');
        for(let i = 0; i <ca.length; i++) {
          let c = ca[i];
          while (c.charAt(0) == ' ') {
            c = c.substring(1);
          }
          if (c.indexOf(name) == 0) {
            return c.substring(name.length, c.length);
          }
        }
        return "";
      }

      function selectBtnOption(btnID) {
        let button = document.getElementById(btnID);
        button.classList.toggle("selected");
  
        if (btnID == "reason9") {
          x = document.getElementById("own-reason-area");

          if (x.style.display === "block") {
            x.style.display = "none";
          } else {
            x.style.display = "block";
          }
        }
      }

      function addCustomText(text) {
        console.log(`custom text= ${text}`);
        addReasonDiv(text);
      }

      function addCustomOption(text) {
        let ownGoalTextArea = document.getElementById("ownGoal");

        if (ownGoalTextArea.value === "") {
          console.log("reasons empty, returning");
          ownGoalTextArea.classList.add("error");
          return;
        }
        ownGoalTextArea.classList.remove("error");

        let parentElement = document.getElementById("goalsList");
        let divWrapper = document.createElement('div');
        let input = document.createElement('input');
        let label = document.createElement('label');
        
        divWrapper.classList.add("form-check");
        divWrapper.classList.add("reasons-checkbox");
        divWrapper.classList.add("custom-reason-checkbox");

        input.classList.add("form-check-input");
        input.classList.add("reasons-input");
        input.name = "goalOption";
        input.type = "checkbox";
        input.value = "goalsCustomX";
        input.id = "goalsCustomX";
        input.checked = true;

        label.classList.add("form-check-label");       
        label.htmlFor = "goalsCustomX";       
        label.innerHTML = text;       

        parentElement.appendChild(divWrapper);
        divWrapper.appendChild(input);
        divWrapper.appendChild(label);

        ownGoalTextArea.value = "";
      }

      function addReasonDiv(text) {
        let parentElement = document.getElementById("goals-area-row");
        let column = document.createElement('div');
        let newElement = document.createElement('div');

        column.classList.add("col-12");
        column.classList.add("col-md-5");
        newElement.classList.add("interactive-text-box");
        newElement.innerHTML = text;
        
        parentElement.appendChild(column);
        column.appendChild(newElement);
      }
      function addGoalDivWithPlan(text) {
        /* encodedID = btoa(text);

        console.log(`encoded text = ${encodedID}`) */

        encodedID = btoa(unescape(encodeURIComponent(text)));

        let parentElement = document.getElementById("goals-area-row");
        let column = document.createElement('div');
        let newElement = document.createElement('div');
        let newButton = document.createElement('button');

        column.classList.add("col-12");
        column.classList.add("col-md-5");
        newElement.classList.add("interactive-text-box");
        newElement.innerHTML = text;
        newElement.id = `actionbox-${encodedID}`;
        
        newButton.classList.add("btn");
        newButton.classList.add("btn-success");
        newButton.classList.add("btn-lg");
        newButton.classList.add("action-plan-btn");
        newButton.id = `actionplanbtn-${encodedID}`;
        newButton.onclick = function() { addActionPlan(newButton.id); };
        newButton.type = "button";
        newButton.innerHTML = "Add action plan";


        parentElement.appendChild(column);
        column.appendChild(newElement);
        createActionPlanDiv(column);
        column.appendChild(newButton);
      }

      function clearItems() {
        let parentElement = document.getElementById("goals-area-row");
        let children = parentElement.childNodes;

        while (children.length > 2) {
          let child = parentElement.lastElementChild;
          console.log(`child id= ${child.id}`);
          if (child.id != "addGoalsDiv")
            parentElement.removeChild(child);
          else break;
        }
      }

      function addActionPlan(btn) {
        const idString = btn.split("-");
        let actionBox = document.getElementById(`actionbox-${idString[1]}`);

        if (actionBox.classList.contains("actionbox-active")) {
          actionBox.classList.remove("actionbox-active");
          actionBox.nextElementSibling.classList.remove("actionbox-active");
        } else {
          actionBox.classList.add("actionbox-active");
          actionBox.nextElementSibling.classList.add("actionbox-active");
        }


      }

      function submitFormConfirm(checkboxObject) {

        clearItems();

        let selectedChoices = null;

        for (var i = 0; i < checkboxObject.length; i++) {
          console.log(`checkbox ${i} = ${checkboxObject[i].checked}`);
          if (checkboxObject[i].checked) {
            let reasonText = checkboxObject[i].nextElementSibling.innerHTML;
            console.log(`sibling text=${reasonText}`);
            addReasonDiv(reasonText);
          }
        }
      }

      function createActionPlanDiv(parentColumn) {
        let actionPlanDiv = document.createElement('div');
        actionPlanDiv.classList.add("action-plan-area");
        actionPlanDiv.innerHTML = `
          <h4>Action plan</h4>
          <h5 class="h6">When</h5>
          <input class="form-control form-text mb-3" type="text" placeholder="For example, Saturday night" aria-label="Action plan - when">
          <h5 class="h6">Where (setting or environment)</h5>
          <input class="form-control form-text mb-3" type="text" placeholder="For example, at home" aria-label="Action plan - where">
          <h5 class="h6">What</h5>
          <input class="form-control form-text mb-3" type="text" placeholder="For example, drinking non-alcohol" aria-label="Action plan - what">
        `;
        parentColumn.appendChild(actionPlanDiv);
      }

      function submitFormContinue(goals) {
        window.location.href = "{{ '/alcohol-goals-and-plan/summary' | url }}";
      }

      function submitFormBack() {
        window.location.href = "{{ '/alcohol-goals-and-plan/goal-setting' | url }}";
      }

    </script>

  </section>
{% endblock %}
